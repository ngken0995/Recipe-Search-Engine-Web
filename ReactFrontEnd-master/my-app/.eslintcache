[{"/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/index.js":"1","/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/reportWebVitals.js":"2","/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/Search.js":"3","/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/FilterPage.js":"4","/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/Navbar.js":"5","/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/Page.js":"6","/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/Login.js":"7","/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/HomePage.js":"8","/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/Favorites.js":"9","/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/About.js":"10","/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/Pagination.js":"11","/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/Posts.js":"12","/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/APIService.js":"13","/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/useFoodRandom.js":"14","/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/FavoriteButton.js":"15"},{"size":1529,"mtime":1624106199055,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1624106199056,"results":"18","hashOfConfig":"17"},{"size":2014,"mtime":1624106199054,"results":"19","hashOfConfig":"17"},{"size":174,"mtime":1624106199051,"results":"20","hashOfConfig":"17"},{"size":2599,"mtime":1624106199052,"results":"21","hashOfConfig":"17"},{"size":1413,"mtime":1624111122204,"results":"22","hashOfConfig":"17"},{"size":2637,"mtime":1624106199052,"results":"23","hashOfConfig":"17"},{"size":1432,"mtime":1624106199052,"results":"24","hashOfConfig":"17"},{"size":2007,"mtime":1624106199051,"results":"25","hashOfConfig":"17"},{"size":1944,"mtime":1624106199050,"results":"26","hashOfConfig":"17"},{"size":577,"mtime":1624106199053,"results":"27","hashOfConfig":"17"},{"size":538,"mtime":1624110454409,"results":"28","hashOfConfig":"17"},{"size":1965,"mtime":1624106199049,"results":"29","hashOfConfig":"17"},{"size":848,"mtime":1624106199054,"results":"30","hashOfConfig":"17"},{"size":1641,"mtime":1624106199051,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"15utdu5",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"34"},"/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/index.js",[],["72","73"],"/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/reportWebVitals.js",[],"/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/Search.js",["74","75"],"import React, { useState, useRef, useCallback } from 'react'\nimport {useHistory} from 'react-router-dom';\n\n\n\nfunction Search() {\n    let history = useHistory()\n    const [query, setQuery] = useState('')\n\n    const SearchBtn = () => {\n        history.push(`/page/${query}`)\n    }\n\n    return (\n      <>\n        <div className=\"container\">\n            <div div className=\"row\">\n                <div className = \"col-sm-8\">\n                    <input type = \"text\" className = \"form-control\" id=\"query\" placeholder = \"Search\"\n                    value = {query} onChange = {e => setQuery(e.target.value)}\n                    />\n                </div>\n                <div className = \"col-sm-4\">\n                <button onClick = {SearchBtn} className = \"btn btn-primary\">Submit</button>\n                </div>\n            </div>\n        </div>\n      </>\n    )\n}\n\n\n/*function Search() {\n  const [query, setQuery] = useState('')\n  const [pageNumber, setPageNumber] = useState(1)\n\n  const {\n    books,\n    hasMore,\n    loading,\n    error\n  } = useFoodSearch(query, pageNumber)\n\n  const observer = useRef()\n  const lastBookElementRef = useCallback(node => {\n    if (loading) return\n    if (observer.current) observer.current.disconnect()\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPageNumber(prevPageNumber => prevPageNumber + 1)\n      }\n    })\n    if (node) observer.current.observe(node)\n  }, [loading, hasMore])\n\n  function handleSearch(e) {\n    setQuery(e.target.value)\n    setPageNumber(1)\n  }\n\n  return (\n    <>\n      <input type=\"text\" value={query} onChange={handleSearch}></input>\n      {books.map((book, index) => {\n        if (books.length === index + 1) {\n          return <div ref={lastBookElementRef} key={book}>{book}</div>\n        } else {\n          return <div key={book}>{book}</div>\n        }\n      })}\n      <div>{loading && 'Loading...'}</div>\n      <div>{error && 'Error'}</div>\n    </>\n  )\n}*/\n\n\n\nexport default Search","/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/FilterPage.js",["76","77"],"import React, { useState, useEffect } from 'react'\n\nfunction FilterPage() {\n\n\n    return (\n        <div>\n            filter\n        </div>\n    )\n}\n\nexport default FilterPage\n","/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/Navbar.js",["78"],"import React, { useState, useEffect } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport {useCookies} from 'react-cookie';\nimport {useHistory} from 'react-router-dom';\n\n\nexport default function Navbar() {\n    const [isLogin, setLogin] = useState(true)\n    const [token, setToken, removeToken] = useCookies(['mytoken'])\n    let history = useHistory()\n\n    useEffect(() => {\n        if(token['mytoken']) {\n            setLogin(true)\n        } else {\n            setLogin(false)\n        } \n    }, [token])\n\n    const logoutBtn = () => {\n        removeToken(['mytoken'])\n        history.push('/')\n    }\n    \n\n    return (\n        <nav className='navbar navbar-expand-lg navbar-light bg-light'>\n            <div className='container-fluid'>\n                <Link className='navbar-brand' to='/'>Nutrition</Link>\n                <button \n                    className='navbar-toggler' \n                    type='button' \n                    data-bs-toggle='collapse' \n                    data-bs-target='#navbarNav' \n                    aria-controls='navbarNav' \n                    aria-expanded='false' \n                    aria-label='Toggle navigation'\n                >\n                    <span className='navbar-toggler-icon'></span>\n                </button>\n                <div className='collapse navbar-collapse' id='navbarNav'>\n                    <ul className='navbar-nav'>\n                        <li className='nav-item'>\n                            <NavLink className='nav-link' to='/'>Home</NavLink>\n                        </li>\n                        <li className='nav-item'>\n                            <NavLink className='nav-link' to='/search'>Search</NavLink>\n                        </li>\n                        <li className='nav-item'>\n                            <NavLink className='nav-link' to='/FilterPage'>Filter</NavLink>\n                        </li>\n                        {isLogin ?\n                        <> \n                            <li>\n                            <NavLink className='nav-link' to='/FavoritePage'>Favorite</NavLink>\n                            </li>\n                            <li>\n                            <button onClick = {logoutBtn} className = \"btn btn-primary\">Logout</button>\n                            </li>\n                        </>    \n                            :<li className='nav-item'>\n                            <NavLink className='nav-link' to='/login'>Login</NavLink>\n                        </li>}\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\n","/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/Page.js",[],"/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/Login.js",["79","80"],"\n\nimport React, {useState, useEffect} from 'react'\nimport APIService from '../APIService';\nimport {useCookies} from 'react-cookie';\nimport {useHistory} from 'react-router-dom';\n\nfunction Login() {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [token, setToken] = useCookies(['mytoken'])\n    const [user, setUser] = useCookies(['myuser'])\n    const [isLogin, setLogin] = useState(true)\n    let history = useHistory()\n\n\n    useEffect(() => {\n        if(token['mytoken']) {\n            history.push('/')\n        }\n    }, [token])\n\n    const loginBtn = () => {\n        APIService.LoginUser({username, password})\n        .then(resp => {\n            setToken('mytoken',resp.data.token)\n            setUser('myuser', username)\n            })\n        .catch(error => console.log(error))\n\n    }\n\n    const RegisterBtn = () => {\n        APIService.RegisterUser({username, password})\n        .then(() =>  loginBtn())\n        .catch(error =>console.log(error))\n\n    }\n    return (\n        <div className = \"App text-center\">\n            <br/>\n            <br/>\n            {isLogin ? <h1>Please Login </h1> : <h1>Please Register </h1>}\n            \n\n            <br/>\n            <br/>\n\n            <div className = \"mb-3 w-50 mx-auto\">\n            <label htmlFor = \"username\" className = \"form-label\">Username</label>\n            <input type = \"text\" className = \"form-control\" id=\"username\" placeholder = \"Please Enter Username\"\n            value = {username} onChange = {e => setUsername(e.target.value)}\n            />\n\n            </div>\n\n            <div className = \"mb-3 w-50 mx-auto\">\n            <label htmlFor = \"password\" className = \"form-label\">Password</label>\n            <input type = \"password\" className = \"form-control\" id=\"password\" placeholder = \"Please Enter Password\"\n            value = {password} onChange = {e => setPassword(e.target.value)}\n            \n            />\n\n            </div>\n\n            {isLogin ?  <button onClick = {loginBtn} className = \"btn btn-primary\">Login</button>\n            :  <button onClick = {RegisterBtn} className = \"btn btn-primary\">Register</button>\n        }\n\n           \n            <div className = \"mb-3\">\n            <br/>\n            {isLogin ? <h5>If You Don't Have Account, Please <button className = \"btn btn-primary\" onClick = {() => setLogin(false)} >Register</button>Here</h5>\n            \n             :  <h5>If You Have Account, Please <button className = \"btn btn-primary\" onClick = {() => setLogin(true)} >Login</button>Here</h5>\n            }\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Login\n","/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/HomePage.js",["81"],"import React, { useState, useRef, useCallback } from \"react\";\nimport useFoodRandom from './useFoodRandom'\nimport {\n  Link\n} from \"react-router-dom\";\n\nfunction HomePage() {\n  const [addMore, setAddMore] = useState(1)\n  const {\n    foods,\n    loading,\n    error\n  } = useFoodRandom(addMore)\n\n  const observer = useRef()\n  \n  const lastFoodElementRef = useCallback(node => {\n    if (loading) return\n    if (observer.current) observer.current.disconnect()\n    observer.current = new IntersectionObserver(entries => {\n      if(entries[0].isIntersecting) {\n        setAddMore(prevAddMore => prevAddMore + 1)\n      }\n    })\n    if (node) observer.current.observe(node)\n  }, [loading])\n\n  return (\n    <>\n      <div className=\"container\">\n          <div className=\"row\">\n          {foods.map((food, index) => {\n            if (foods.length === index + 1){\n              return <div className=\"col-sm-4\" key={food.id}><Link to={{pathname: `/food/${food.id}`}}>\n                <img alt='food' ref={lastFoodElementRef}  id={food.id} src={food.image} />\n                </Link></div>\n            }\n            return <div className=\"col-sm-4\" key={food.id}><Link to={{pathname: `/food/${food.id}`}}>\n              <img alt='food' key={food.id} id={food.id} src={food.image} />\n              </Link></div>\n            })\n          }\n          </div>\n      </div>\n      <div>{loading && 'Loading...'}</div>\n    </>\n  )\n}\n\nexport default HomePage","/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/Favorites.js",["82"],"import React, { useState, useEffect } from 'react'\nimport {useCookies} from 'react-cookie';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\nfunction FavoritePage() {\n    const [token] = useCookies(['mytoken'])\n    const token_id = token['mytoken']\n    const [user_id] = useCookies(['myuser'])\n    const user = user_id['myuser']\n    const [favorites, setFavorites] = useState([])\n    const headers = {\n        'Content-Type':'application/json',\n        'Authorization':`Token ${token_id}` \n      };\n\n    useEffect(() => {\n        axios.get(`http://127.0.0.1:8000/api/favorites/?user=${user}`, { headers })\n        .then(res=>{\n            res.data.map(food => \n                (axios.get(`https://api.spoonacular.com/recipes/${food.food_id}/information?apiKey=${process.env.REACT_APP_API_KEY}`)\n                .then(resp =>{\n                    setFavorites(oldfavorites => [...oldfavorites, resp.data])\n                })\n            ))\n            })\n            /*\n            axios({\n                method: 'GET',\n                url: `https://api.spoonacular.com/recipes/${id}/information?apiKey=b19b9ab34ae04c10aeefb0f9ef7e0f3b`,    \n            }).then(res => {\n                const recipeImage = res.data.image;\n                const recipeTitle = res.data.title;\n                setImage(recipeImage);\n                setTitle(recipeTitle);\n                console.log(recipeImage)\n            })\n            .catch(error => {\n                console.log(error.response)\n            });\n            */\n        .catch(e =>{\n            console.log(e)\n        })\n    },[])\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n        {favorites.map((food) => {\n        return <div className=\"col-lg-6\" key={food.id}><Link to={{pathname: `/food/${food.id}`}}>\n          <img alt='food' key={food.id} id={food.id} src={food.image} />\n          </Link></div>\n        })\n      }\n            </div>\n        </div>\n    )\n}\n\nexport default FavoritePage\n","/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/About.js",["83","84"],"import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios'\nimport FavoriteButton from './FavoriteButton';\nimport {useCookies} from 'react-cookie';\n\nexport default function About() {\n    const [token] = useCookies(['mytoken'])\n    const [steps, setSteps] = useState([])\n    const [image, setImage] = useState('')\n    const [title, setTitle] = useState('')\n    const { id } = useParams();\n\n    let isToken = false;\n    if(typeof token['mytoken'] !== 'undefined') {\n        isToken = true\n    } \n\n    useEffect(() => {\n        axios({\n            method: 'GET',\n            url: `https://api.spoonacular.com/recipes/${id}/analyzedInstructions?apiKey=${process.env.REACT_APP_API_KEY}`,    \n        }).then(res => {\n            const recipeSteps = res.data[0].steps;\n            setSteps(recipeSteps);\n            console.log(recipeSteps)\n        })\n        .catch(error => {\n            console.log(error.response)\n        });\n\n        axios({\n            method: 'GET',\n            url: `https://api.spoonacular.com/recipes/${id}/information?apiKey=${process.env.REACT_APP_API_KEY}`,    \n        }).then(res => {\n            const recipeImage = res.data.image;\n            const recipeTitle = res.data.title;\n            setImage(recipeImage);\n            setTitle(recipeTitle);\n            console.log(recipeImage)\n        })\n        .catch(error => {\n            console.log(error.response)\n        });\n    },[])\n\n\n    \n    return (\n        <>\n        <div className=\"text-center\">\n            <img src={image} className=\"img-fluid\"/>\n            <h2>{title}</h2>\n            {isToken ? <FavoriteButton id = {id}/>: <div></div>}\n            <div className=\"text-left w-50 mx-auto\">\n            <ol>\n            {steps.map(d =>\n                <li className=\"mb-2\">{d.step}</li>)} \n                </ol>\n            </div>      \n        </div>\n        </>\n    )\n}","/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/Pagination.js",[],"/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/Posts.js",[],"/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/APIService.js",[],["85","86"],"/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/useFoodRandom.js",[],"/Users/ken/Documents/cs50/nutrition_web/ReactFrontEnd-master/my-app/src/components/FavoriteButton.js",["87","88"],"import React, { useState, useEffect } from 'react'\nimport APIService from '../APIService';\nimport {useCookies} from 'react-cookie';\nimport axios from 'axios';\n\nfunction FavoriteButton(props) {\n\n    const [token] = useCookies(['mytoken'])\n    const [user_id] = useCookies(['myuser'])\n    const food_id = props.id\n    const user = user_id['myuser']\n    const [isLike, setIsLike] = useState(false)\n    const [id, setId] = useState(0)\n\n    const likeFood = () => {\n        APIService.InsertFood({food_id, user}, token['mytoken'])\n        .then(resp => {\n          setId(resp.data.id)\n        })\n        setIsLike(true)\n    }\n\n    const removeFood = () => {\n      APIService.DeleteFavorite(id, token['mytoken'])\n      setIsLike(false)\n    }\n\n    useEffect(() => {\n      APIService.isLike(food_id, user_id['myuser'], token['mytoken'])\n      .then(resp => {\n        if (resp.data.length !== 0) {\n          setIsLike(true)\n          setId(resp.data[0].id)\n        }\n      })\n    }, [])\n   /*\n    function likeFood() {\n\n        return axios.post('http://127.0.0.1:8000/api/articles/', body, {\n          headers: {\n            'Content-Type':'application/json',\n            'Authorization':`Token ${token}` \n          }\n        });\n      }\n    */\n\n    return (\n        <div>\n            <div className = \"col\">\n            {\n                    isLike === true ? <button onClick= {removeFood} className = \"btn btn-success\">Remove From Favorite</button>\n                    :  <button onClick = {likeFood} className = \"btn btn-primary\">Add to Favorite</button>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default FavoriteButton\n",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":1,"column":27,"nodeType":"95","messageId":"96","endLine":1,"endColumn":33},{"ruleId":"93","severity":1,"message":"97","line":1,"column":35,"nodeType":"95","messageId":"96","endLine":1,"endColumn":46},{"ruleId":"93","severity":1,"message":"98","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"99","line":1,"column":27,"nodeType":"95","messageId":"96","endLine":1,"endColumn":36},{"ruleId":"93","severity":1,"message":"100","line":9,"column":19,"nodeType":"95","messageId":"96","endLine":9,"endColumn":27},{"ruleId":"93","severity":1,"message":"101","line":12,"column":12,"nodeType":"95","messageId":"96","endLine":12,"endColumn":16},{"ruleId":"102","severity":1,"message":"103","line":21,"column":8,"nodeType":"104","endLine":21,"endColumn":15,"suggestions":"105"},{"ruleId":"93","severity":1,"message":"106","line":12,"column":5,"nodeType":"95","messageId":"96","endLine":12,"endColumn":10},{"ruleId":"102","severity":1,"message":"107","line":45,"column":7,"nodeType":"104","endLine":45,"endColumn":9,"suggestions":"108"},{"ruleId":"102","severity":1,"message":"109","line":46,"column":7,"nodeType":"104","endLine":46,"endColumn":9,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":53,"column":13,"nodeType":"113","endLine":53,"endColumn":53},{"ruleId":"89","replacedBy":"114"},{"ruleId":"91","replacedBy":"115"},{"ruleId":"93","severity":1,"message":"116","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":13},{"ruleId":"102","severity":1,"message":"117","line":36,"column":8,"nodeType":"104","endLine":36,"endColumn":10,"suggestions":"118"},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'setToken' is assigned a value but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["121"],"'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'headers' and 'user'. Either include them or remove the dependency array.",["122"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["123"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["119"],["120"],"'axios' is defined but never used.","React Hook useEffect has missing dependencies: 'food_id', 'token', and 'user_id'. Either include them or remove the dependency array.",["124"],"no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [history, token]",{"range":"133","text":"134"},"Update the dependencies array to be: [headers, user]",{"range":"135","text":"136"},"Update the dependencies array to be: [id]",{"range":"137","text":"138"},"Update the dependencies array to be: [food_id, token, user_id]",{"range":"139","text":"140"},[580,587],"[history, token]",[1599,1601],"[headers, user]",[1491,1493],"[id]",[974,976],"[food_id, token, user_id]"]