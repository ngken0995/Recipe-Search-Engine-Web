[{"D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\index.js":"1","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\reportWebVitals.js":"2","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Search.js":"3","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\About.js":"4","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Login.js":"5","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\HomePage.js":"6","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Favorites.js":"7","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\FilterPage.js":"8","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Navbar.js":"9","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Page.js":"10","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\useFoodRandom.js":"11","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\FavoriteButton.js":"12","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\APIService.js":"13","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Posts.js":"14","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Pagination.js":"15"},{"size":1534,"mtime":1624247629421,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1623168670767,"results":"18","hashOfConfig":"17"},{"size":2444,"mtime":1624247632643,"results":"19","hashOfConfig":"17"},{"size":2008,"mtime":1623941550903,"results":"20","hashOfConfig":"17"},{"size":2637,"mtime":1623626287001,"results":"21","hashOfConfig":"17"},{"size":1481,"mtime":1623936589488,"results":"22","hashOfConfig":"17"},{"size":2068,"mtime":1623935140678,"results":"23","hashOfConfig":"17"},{"size":187,"mtime":1623985023306,"results":"24","hashOfConfig":"17"},{"size":2669,"mtime":1623985067589,"results":"25","hashOfConfig":"17"},{"size":1571,"mtime":1624247640391,"results":"26","hashOfConfig":"17"},{"size":872,"mtime":1623937243167,"results":"27","hashOfConfig":"17"},{"size":1702,"mtime":1623948942047,"results":"28","hashOfConfig":"17"},{"size":1965,"mtime":1623627644943,"results":"29","hashOfConfig":"17"},{"size":563,"mtime":1624242826211,"results":"30","hashOfConfig":"17"},{"size":619,"mtime":1624246974587,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1q8etti",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\index.js",["74"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Route, BrowserRouter} from 'react-router-dom';\r\nimport Login from './components/Login'\r\nimport {CookiesProvider} from 'react-cookie';\r\nimport HomePage from './components/HomePage';\r\nimport About from './components/About';\r\nimport Navbar from './components/Navbar';\r\nimport Favorites from './components/Favorites';\r\nimport Search from './components/Search';\r\nimport Page from './components/Page';\r\nimport FilterPage from './components/FilterPage';\r\n\r\nfunction Router() {\r\n   \r\n  return(\r\n    <CookiesProvider>\r\n    <BrowserRouter>\r\n\r\n    <Navbar />\r\n\r\n    <Route exact path = \"/login\" component = {Login}/>\r\n    <Route exact path = \"/\" component = {HomePage}/>\r\n    <Route exact path = \"/food/:id\" component = {About}/>\r\n    <Route exact path = \"/favorites\" component = {Favorites}/>\r\n    <Route exact path = \"/search\" component = {Search}/>\r\n\r\n    <Route exact path = \"/page/:query/:minCarbs/:pageNum\" component = {Page}/>\r\n\r\n    </BrowserRouter>\r\n    </CookiesProvider>\r\n  )\r\n\r\n}\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["75","76"],"D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\reportWebVitals.js",[],"D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Search.js",["77","78"],"import React, { useState, useRef, useCallback } from 'react'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\n\r\nfunction Search() {\r\n    let history = useHistory()\r\n    const [query, setQuery] = useState('')\r\n    const [minCarbs, setMinCarbs] = useState('')\r\n\r\n    const SearchBtn = () => {\r\n        history.push(`/page/${query}/${minCarbs}/1`)\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n            <div div className=\"row\">\r\n                <div className = \"col-sm-4\">\r\n                    <input type = \"text\" className = \"form-control\" id=\"query\" placeholder = \"Search\"\r\n                    value = {query} onChange = {e => setQuery(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className = \"col-sm-4\">\r\n                    <input type = \"text\" className = \"form-control\" id=\"minCarbs\" placeholder = \"minCarbs\"\r\n                    value = {minCarbs} onChange = {e => setMinCarbs(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className = \"col-sm-4\">\r\n                <button onClick = {SearchBtn} className = \"btn btn-primary\">Submit</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </>\r\n    )\r\n}\r\n\r\n\r\n/*function Search() {\r\n  const [query, setQuery] = useState('')\r\n  const [pageNumber, setPageNumber] = useState(1)\r\n\r\n  const {\r\n    books,\r\n    hasMore,\r\n    loading,\r\n    error\r\n  } = useFoodSearch(query, pageNumber)\r\n\r\n  const observer = useRef()\r\n  const lastBookElementRef = useCallback(node => {\r\n    if (loading) return\r\n    if (observer.current) observer.current.disconnect()\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting && hasMore) {\r\n        setPageNumber(prevPageNumber => prevPageNumber + 1)\r\n      }\r\n    })\r\n    if (node) observer.current.observe(node)\r\n  }, [loading, hasMore])\r\n\r\n  function handleSearch(e) {\r\n    setQuery(e.target.value)\r\n    setPageNumber(1)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <input type=\"text\" value={query} onChange={handleSearch}></input>\r\n      {books.map((book, index) => {\r\n        if (books.length === index + 1) {\r\n          return <div ref={lastBookElementRef} key={book}>{book}</div>\r\n        } else {\r\n          return <div key={book}>{book}</div>\r\n        }\r\n      })}\r\n      <div>{loading && 'Loading...'}</div>\r\n      <div>{error && 'Error'}</div>\r\n    </>\r\n  )\r\n}*/\r\n\r\n\r\n\r\nexport default Search","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\About.js",["79","80"],"import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport FavoriteButton from './FavoriteButton';\r\nimport {useCookies} from 'react-cookie';\r\n\r\nexport default function About() {\r\n    const [token] = useCookies(['mytoken'])\r\n    const [steps, setSteps] = useState([])\r\n    const [image, setImage] = useState('')\r\n    const [title, setTitle] = useState('')\r\n    const { id } = useParams();\r\n\r\n    let isToken = false;\r\n    if(typeof token['mytoken'] !== 'undefined') {\r\n        isToken = true\r\n    } \r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'GET',\r\n            url: `https://api.spoonacular.com/recipes/${id}/analyzedInstructions?apiKey=${process.env.REACT_APP_API_KEY}`,    \r\n        }).then(res => {\r\n            const recipeSteps = res.data[0].steps;\r\n            setSteps(recipeSteps);\r\n            console.log(recipeSteps)\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        });\r\n\r\n        axios({\r\n            method: 'GET',\r\n            url: `https://api.spoonacular.com/recipes/${id}/information?apiKey=${process.env.REACT_APP_API_KEY}`,    \r\n        }).then(res => {\r\n            const recipeImage = res.data.image;\r\n            const recipeTitle = res.data.title;\r\n            setImage(recipeImage);\r\n            setTitle(recipeTitle);\r\n            console.log(recipeImage)\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        });\r\n    },[])\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"text-center\">\r\n            <img src={image} className=\"img-fluid\"/>\r\n            <h2>{title}</h2>\r\n            {isToken ? <FavoriteButton id = {id}/>: <div></div>}\r\n            <div className=\"text-left w-50 mx-auto\">\r\n            <ol>\r\n            {steps.map(d =>\r\n                <li className=\"mb-2\">{d.step}</li>)} \r\n                </ol>\r\n            </div>      \r\n        </div>\r\n        </>\r\n    )\r\n}","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Login.js",["81","82"],"\n\nimport React, {useState, useEffect} from 'react'\nimport APIService from '../APIService';\nimport {useCookies} from 'react-cookie';\nimport {useHistory} from 'react-router-dom';\n\nfunction Login() {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [token, setToken] = useCookies(['mytoken'])\n    const [user, setUser] = useCookies(['myuser'])\n    const [isLogin, setLogin] = useState(true)\n    let history = useHistory()\n\n\n    useEffect(() => {\n        if(token['mytoken']) {\n            history.push('/')\n        }\n    }, [token])\n\n    const loginBtn = () => {\n        APIService.LoginUser({username, password})\n        .then(resp => {\n            setToken('mytoken',resp.data.token)\n            setUser('myuser', username)\n            })\n        .catch(error => console.log(error))\n\n    }\n\n    const RegisterBtn = () => {\n        APIService.RegisterUser({username, password})\n        .then(() =>  loginBtn())\n        .catch(error =>console.log(error))\n\n    }\n    return (\n        <div className = \"App text-center\">\n            <br/>\n            <br/>\n            {isLogin ? <h1>Please Login </h1> : <h1>Please Register </h1>}\n            \n\n            <br/>\n            <br/>\n\n            <div className = \"mb-3 w-50 mx-auto\">\n            <label htmlFor = \"username\" className = \"form-label\">Username</label>\n            <input type = \"text\" className = \"form-control\" id=\"username\" placeholder = \"Please Enter Username\"\n            value = {username} onChange = {e => setUsername(e.target.value)}\n            />\n\n            </div>\n\n            <div className = \"mb-3 w-50 mx-auto\">\n            <label htmlFor = \"password\" className = \"form-label\">Password</label>\n            <input type = \"password\" className = \"form-control\" id=\"password\" placeholder = \"Please Enter Password\"\n            value = {password} onChange = {e => setPassword(e.target.value)}\n            \n            />\n\n            </div>\n\n            {isLogin ?  <button onClick = {loginBtn} className = \"btn btn-primary\">Login</button>\n            :  <button onClick = {RegisterBtn} className = \"btn btn-primary\">Register</button>\n        }\n\n           \n            <div className = \"mb-3\">\n            <br/>\n            {isLogin ? <h5>If You Don't Have Account, Please <button className = \"btn btn-primary\" onClick = {() => setLogin(false)} >Register</button>Here</h5>\n            \n             :  <h5>If You Have Account, Please <button className = \"btn btn-primary\" onClick = {() => setLogin(true)} >Login</button>Here</h5>\n            }\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Login\n","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\HomePage.js",["83"],"import React, { useState, useRef, useCallback } from \"react\";\r\nimport useFoodRandom from './useFoodRandom'\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction HomePage() {\r\n  const [addMore, setAddMore] = useState(1)\r\n  const {\r\n    foods,\r\n    loading,\r\n    error\r\n  } = useFoodRandom(addMore)\r\n\r\n  const observer = useRef()\r\n  \r\n  const lastFoodElementRef = useCallback(node => {\r\n    if (loading) return\r\n    if (observer.current) observer.current.disconnect()\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if(entries[0].isIntersecting) {\r\n        setAddMore(prevAddMore => prevAddMore + 1)\r\n      }\r\n    })\r\n    if (node) observer.current.observe(node)\r\n  }, [loading])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n          <div className=\"row\">\r\n          {foods.map((food, index) => {\r\n            if (foods.length === index + 1){\r\n              return <div className=\"col-sm-4\" key={food.id}><Link to={{pathname: `/food/${food.id}`}}>\r\n                <img alt='food' ref={lastFoodElementRef}  id={food.id} src={food.image} />\r\n                </Link></div>\r\n            }\r\n            return <div className=\"col-sm-4\" key={food.id}><Link to={{pathname: `/food/${food.id}`}}>\r\n              <img alt='food' key={food.id} id={food.id} src={food.image} />\r\n              </Link></div>\r\n            })\r\n          }\r\n          </div>\r\n      </div>\r\n      <div>{loading && 'Loading...'}</div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomePage","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Favorites.js",["84"],"import React, { useState, useEffect } from 'react'\r\nimport {useCookies} from 'react-cookie';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction FavoritePage() {\r\n    const [token] = useCookies(['mytoken'])\r\n    const token_id = token['mytoken']\r\n    const [user_id] = useCookies(['myuser'])\r\n    const user = user_id['myuser']\r\n    const [favorites, setFavorites] = useState([])\r\n    const headers = {\r\n        'Content-Type':'application/json',\r\n        'Authorization':`Token ${token_id}` \r\n      };\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://127.0.0.1:8000/api/favorites/?user=${user}`, { headers })\r\n        .then(res=>{\r\n            res.data.map(food => \r\n                (axios.get(`https://api.spoonacular.com/recipes/${food.food_id}/information?apiKey=${process.env.REACT_APP_API_KEY}`)\r\n                .then(resp =>{\r\n                    setFavorites(oldfavorites => [...oldfavorites, resp.data])\r\n                })\r\n            ))\r\n            })\r\n            /*\r\n            axios({\r\n                method: 'GET',\r\n                url: `https://api.spoonacular.com/recipes/${id}/information?apiKey=b19b9ab34ae04c10aeefb0f9ef7e0f3b`,    \r\n            }).then(res => {\r\n                const recipeImage = res.data.image;\r\n                const recipeTitle = res.data.title;\r\n                setImage(recipeImage);\r\n                setTitle(recipeTitle);\r\n                console.log(recipeImage)\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response)\r\n            });\r\n            */\r\n        .catch(e =>{\r\n            console.log(e)\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n        {favorites.map((food) => {\r\n        return <div className=\"col-lg-6\" key={food.id}><Link to={{pathname: `/food/${food.id}`}}>\r\n          <img alt='food' key={food.id} id={food.id} src={food.image} />\r\n          </Link></div>\r\n        })\r\n      }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoritePage\r\n","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\FilterPage.js",["85","86"],"import React, { useState, useEffect } from 'react'\r\n\r\nfunction FilterPage() {\r\n\r\n\r\n    return (\r\n        <div>\r\n            filter\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterPage\r\n","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Navbar.js",["87"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport {useCookies} from 'react-cookie';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar() {\r\n    const [isLogin, setLogin] = useState(true)\r\n    const [token, setToken, removeToken] = useCookies(['mytoken'])\r\n    let history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if(token['mytoken']) {\r\n            setLogin(true)\r\n        } else {\r\n            setLogin(false)\r\n        } \r\n    }, [token])\r\n\r\n    const logoutBtn = () => {\r\n        removeToken(['mytoken'])\r\n        history.push('/')\r\n    }\r\n    \r\n\r\n    return (\r\n        <nav className='navbar navbar-expand-lg navbar-light bg-light'>\r\n            <div className='container-fluid'>\r\n                <Link className='navbar-brand' to='/'>Nutrition</Link>\r\n                <button \r\n                    className='navbar-toggler' \r\n                    type='button' \r\n                    data-bs-toggle='collapse' \r\n                    data-bs-target='#navbarNav' \r\n                    aria-controls='navbarNav' \r\n                    aria-expanded='false' \r\n                    aria-label='Toggle navigation'\r\n                >\r\n                    <span className='navbar-toggler-icon'></span>\r\n                </button>\r\n                <div className='collapse navbar-collapse' id='navbarNav'>\r\n                    <ul className='navbar-nav'>\r\n                        <li className='nav-item'>\r\n                            <NavLink className='nav-link' to='/'>Home</NavLink>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <NavLink className='nav-link' to='/search'>Search</NavLink>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <NavLink className='nav-link' to='/FilterPage'>Filter</NavLink>\r\n                        </li>\r\n                        {isLogin ?\r\n                        <> \r\n                            <li>\r\n                            <NavLink className='nav-link' to='/FavoritePage'>Favorite</NavLink>\r\n                            </li>\r\n                            <li>\r\n                            <button onClick = {logoutBtn} className = \"btn btn-primary\">Logout</button>\r\n                            </li>\r\n                        </>    \r\n                            :<li className='nav-item'>\r\n                            <NavLink className='nav-link' to='/login'>Login</NavLink>\r\n                        </li>}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\n","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Page.js",["88"],"import React, { useState, useEffect } from 'react';\r\nimport Posts from './Posts';\r\nimport Pagination from './Pagination';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Page = (props) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { pageNum } = useParams();\r\n  const [currentPage, setCurrentPage] = useState(pageNum);\r\n  const [postsPerPage] = useState(5);\r\n\r\n  const { query, minCarbs } = useParams();\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n\r\n      const res = await axios.get(`https://api.spoonacular.com/recipes/complexSearch?apiKey=${process.env.REACT_APP_API_KEY}&query=${query}&minCarbs=${minCarbs}&number=10`);\r\n\r\n      setPosts(res.data.results);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchPosts();\r\n  }, [query]);\r\n\r\n  // Get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  // Change page\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className='container mt-5'>\r\n      <h1 className='text-primary mb-3'>Search Result</h1>\r\n      <Posts posts={currentPosts} loading={loading} />\r\n      <Pagination\r\n        postsPerPage={postsPerPage}\r\n        totalPosts={posts.length}\r\n        paginate={paginate}\r\n        minCarbs={minCarbs}\r\n        query={query}\r\n\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\useFoodRandom.js",[],"D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\FavoriteButton.js",["89","90"],"import React, { useState, useEffect } from 'react'\r\nimport APIService from '../APIService';\r\nimport {useCookies} from 'react-cookie';\r\nimport axios from 'axios';\r\n\r\nfunction FavoriteButton(props) {\r\n\r\n    const [token] = useCookies(['mytoken'])\r\n    const [user_id] = useCookies(['myuser'])\r\n    const food_id = props.id\r\n    const user = user_id['myuser']\r\n    const [isLike, setIsLike] = useState(false)\r\n    const [id, setId] = useState(0)\r\n\r\n    const likeFood = () => {\r\n        APIService.InsertFood({food_id, user}, token['mytoken'])\r\n        .then(resp => {\r\n          setId(resp.data.id)\r\n        })\r\n        setIsLike(true)\r\n    }\r\n\r\n    const removeFood = () => {\r\n      APIService.DeleteFavorite(id, token['mytoken'])\r\n      setIsLike(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n      APIService.isLike(food_id, user_id['myuser'], token['mytoken'])\r\n      .then(resp => {\r\n        if (resp.data.length !== 0) {\r\n          setIsLike(true)\r\n          setId(resp.data[0].id)\r\n        }\r\n      })\r\n    }, [])\r\n   /*\r\n    function likeFood() {\r\n\r\n        return axios.post('http://127.0.0.1:8000/api/articles/', body, {\r\n          headers: {\r\n            'Content-Type':'application/json',\r\n            'Authorization':`Token ${token}` \r\n          }\r\n        });\r\n      }\r\n    */\r\n\r\n    return (\r\n        <div>\r\n            <div className = \"col\">\r\n            {\r\n                    isLike === true ? <button onClick= {removeFood} className = \"btn btn-success\">Remove From Favorite</button>\r\n                    :  <button onClick = {likeFood} className = \"btn btn-primary\">Add to Favorite</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoriteButton\r\n","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\APIService.js",[],"D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Posts.js",[],"D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Pagination.js",[],["91","92"],{"ruleId":"93","severity":1,"message":"94","line":15,"column":8,"nodeType":"95","messageId":"96","endLine":15,"endColumn":18},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"93","severity":1,"message":"101","line":1,"column":27,"nodeType":"95","messageId":"96","endLine":1,"endColumn":33},{"ruleId":"93","severity":1,"message":"102","line":1,"column":35,"nodeType":"95","messageId":"96","endLine":1,"endColumn":46},{"ruleId":"103","severity":1,"message":"104","line":46,"column":7,"nodeType":"105","endLine":46,"endColumn":9,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":53,"column":13,"nodeType":"109","endLine":53,"endColumn":53},{"ruleId":"93","severity":1,"message":"110","line":12,"column":12,"nodeType":"95","messageId":"96","endLine":12,"endColumn":16},{"ruleId":"103","severity":1,"message":"111","line":21,"column":8,"nodeType":"105","endLine":21,"endColumn":15,"suggestions":"112"},{"ruleId":"93","severity":1,"message":"113","line":12,"column":5,"nodeType":"95","messageId":"96","endLine":12,"endColumn":10},{"ruleId":"103","severity":1,"message":"114","line":45,"column":7,"nodeType":"105","endLine":45,"endColumn":9,"suggestions":"115"},{"ruleId":"93","severity":1,"message":"116","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"117","line":1,"column":27,"nodeType":"95","messageId":"96","endLine":1,"endColumn":36},{"ruleId":"93","severity":1,"message":"118","line":9,"column":19,"nodeType":"95","messageId":"96","endLine":9,"endColumn":27},{"ruleId":"103","severity":1,"message":"119","line":29,"column":6,"nodeType":"105","endLine":29,"endColumn":13,"suggestions":"120"},{"ruleId":"93","severity":1,"message":"121","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":13},{"ruleId":"103","severity":1,"message":"122","line":36,"column":8,"nodeType":"105","endLine":36,"endColumn":10,"suggestions":"123"},{"ruleId":"97","replacedBy":"124"},{"ruleId":"99","replacedBy":"125"},"no-unused-vars","'FilterPage' is defined but never used.","Identifier","unusedVar","no-native-reassign",["126"],"no-negated-in-lhs",["127"],"'useRef' is defined but never used.","'useCallback' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["128"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["129"],"'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'headers' and 'user'. Either include them or remove the dependency array.",["130"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'setToken' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'minCarbs'. Either include it or remove the dependency array.",["131"],"'axios' is defined but never used.","React Hook useEffect has missing dependencies: 'food_id', 'token', and 'user_id'. Either include them or remove the dependency array.",["132"],["126"],["127"],"no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [id]",{"range":"143","text":"144"},"Update the dependencies array to be: [history, token]",{"range":"145","text":"146"},"Update the dependencies array to be: [headers, user]",{"range":"147","text":"148"},"Update the dependencies array to be: [minCarbs, query]",{"range":"149","text":"150"},"Update the dependencies array to be: [food_id, token, user_id]",{"range":"151","text":"152"},[1536,1538],"[id]",[580,587],"[history, token]",[1643,1645],"[headers, user]",[867,874],"[minCarbs, query]",[1009,1011],"[food_id, token, user_id]"]