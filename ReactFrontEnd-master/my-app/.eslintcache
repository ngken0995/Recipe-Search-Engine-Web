[{"D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\index.js":"1","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Search.js":"2","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\About.js":"3","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Login.js":"4","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\HomePage.js":"5","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Favorites.js":"6","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Navbar.js":"7","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Page.js":"8","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\useFoodRandom.js":"9","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\FavoriteButton.js":"10","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\APIService.js":"11","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Posts.js":"12","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Pagination.js":"13"},{"size":1243,"mtime":1624489557542,"results":"14","hashOfConfig":"15"},{"size":4728,"mtime":1625010113700,"results":"16","hashOfConfig":"15"},{"size":2813,"mtime":1624489557539,"results":"17","hashOfConfig":"15"},{"size":2721,"mtime":1624489557540,"results":"18","hashOfConfig":"15"},{"size":1499,"mtime":1624489557540,"results":"19","hashOfConfig":"15"},{"size":2090,"mtime":1624489557539,"results":"20","hashOfConfig":"15"},{"size":2491,"mtime":1624489557540,"results":"21","hashOfConfig":"15"},{"size":1873,"mtime":1624489557541,"results":"22","hashOfConfig":"15"},{"size":874,"mtime":1624489557541,"results":"23","hashOfConfig":"15"},{"size":1702,"mtime":1624489557539,"results":"24","hashOfConfig":"15"},{"size":2058,"mtime":1624489557538,"results":"25","hashOfConfig":"15"},{"size":563,"mtime":1624489557541,"results":"26","hashOfConfig":"15"},{"size":602,"mtime":1624489557541,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1q8etti",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\index.js",[],["62","63"],"D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Search.js",[],"D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\About.js",["64"],"import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport FavoriteButton from './FavoriteButton';\r\nimport {useCookies} from 'react-cookie';\r\n\r\nexport default function About() {\r\n    const [token] = useCookies(['mytoken'])\r\n    const [steps, setSteps] = useState([])\r\n    const [image, setImage] = useState('')\r\n    const [title, setTitle] = useState('')\r\n    const { id } = useParams();\r\n\r\n    let isToken = false;\r\n    if(typeof token['mytoken'] !== 'undefined') {\r\n        isToken = true\r\n    }\r\n    \r\n    const one = `https://api.spoonacular.com/recipes/${id}/analyzedInstructions?apiKey=${process.env.REACT_APP_API_KEY}`;\r\n    const two = `https://api.spoonacular.com/recipes/${id}/information?apiKey=${process.env.REACT_APP_API_KEY}`;\r\n\r\n    const requestOne = axios.get(one);\r\n    const requestTwo = axios.get(two);\r\n    \r\n    useEffect(() => {\r\n        axios.all([requestOne, requestTwo])\r\n        .then(\r\n            axios.spread((...res) => {\r\n                const responseOne = res[0].data[0].steps;\r\n                setSteps(responseOne);\r\n\r\n                const recipeImage = res[1].data.image;\r\n                const recipeTitle = res[1].data.title;\r\n                setImage(recipeImage);\r\n                setTitle(recipeTitle);\r\n\r\n            })\r\n        )\r\n        .catch(errors => {\r\n            // react on errors.\r\n            console.error(errors);\r\n        });\r\n    })\r\n        /*\r\n        axios({\r\n            method: 'GET',\r\n            url: `https://api.spoonacular.com/recipes/${id}/analyzedInstructions?apiKey=${process.env.REACT_APP_API_KEY}`,    \r\n        }).then(res => {\r\n            const recipeSteps = res.data[0].steps;\r\n            setSteps(recipeSteps);\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        });\r\n\r\n        axios({\r\n            method: 'GET',\r\n            url: `https://api.spoonacular.com/recipes/${id}/information?apiKey=${process.env.REACT_APP_API_KEY}`,    \r\n        }).then(res => {\r\n            const recipeImage = res.data.image;\r\n            const recipeTitle = res.data.title;\r\n            setImage(recipeImage);\r\n            setTitle(recipeTitle);\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        });\r\n    },[])\r\n    */\r\n\r\n    return (\r\n        <>\r\n        <div className=\"text-center\">\r\n            <img src={image} className=\"img-fluid\"/>\r\n            <h2>{title}</h2>\r\n            {isToken ? <FavoriteButton id = {id}/>: <div></div>}\r\n            <div className=\"text-left w-50 mx-auto\">\r\n            <ol>\r\n            {steps.map(d =>\r\n                <li className=\"mb-2\">{d.step}</li>)} \r\n                </ol>\r\n            </div>      \r\n        </div>\r\n        </>\r\n    )\r\n}","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Login.js",["65","66"],"\r\n\r\nimport React, {useState, useEffect} from 'react'\r\nimport APIService from '../APIService';\r\nimport {useCookies} from 'react-cookie';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nfunction Login() {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [token, setToken] = useCookies(['mytoken'])\r\n    const [user, setUser] = useCookies(['myuser'])\r\n    const [isLogin, setLogin] = useState(true)\r\n    let history = useHistory()\r\n\r\n\r\n    useEffect(() => {\r\n        if(token['mytoken']) {\r\n            history.push('/')\r\n        }\r\n    }, [token])\r\n\r\n    const loginBtn = () => {\r\n        APIService.LoginUser({username, password})\r\n        .then(resp => {\r\n            setToken('mytoken',resp.data.token)\r\n            setUser('myuser', username)\r\n            })\r\n        .catch(error => console.log(error))\r\n\r\n    }\r\n\r\n    const RegisterBtn = () => {\r\n        APIService.RegisterUser({username, password})\r\n        .then(() =>  loginBtn())\r\n        .catch(error =>console.log(error))\r\n\r\n    }\r\n    return (\r\n        <div className = \"App text-center\">\r\n            <br/>\r\n            <br/>\r\n            {isLogin ? <h1>Please Login </h1> : <h1>Please Register </h1>}\r\n            \r\n\r\n            <br/>\r\n            <br/>\r\n\r\n            <div className = \"mb-3 w-50 mx-auto\">\r\n            <label htmlFor = \"username\" className = \"form-label\">Username</label>\r\n            <input type = \"text\" className = \"form-control\" id=\"username\" placeholder = \"Please Enter Username\"\r\n            value = {username} onChange = {e => setUsername(e.target.value)}\r\n            />\r\n\r\n            </div>\r\n\r\n            <div className = \"mb-3 w-50 mx-auto\">\r\n            <label htmlFor = \"password\" className = \"form-label\">Password</label>\r\n            <input type = \"password\" className = \"form-control\" id=\"password\" placeholder = \"Please Enter Password\"\r\n            value = {password} onChange = {e => setPassword(e.target.value)}\r\n            \r\n            />\r\n\r\n            </div>\r\n\r\n            {isLogin ?  <button onClick = {loginBtn} className = \"btn btn-primary\">Login</button>\r\n            :  <button onClick = {RegisterBtn} className = \"btn btn-primary\">Register</button>\r\n        }\r\n\r\n           \r\n            <div className = \"mb-3\">\r\n            <br/>\r\n            {isLogin ? <h5>If You Don't Have Account, Please <button className = \"btn btn-primary\" onClick = {() => setLogin(false)} >Register</button>Here</h5>\r\n            \r\n             :  <h5>If You Have Account, Please <button className = \"btn btn-primary\" onClick = {() => setLogin(true)} >Login</button>Here</h5>\r\n            }\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\HomePage.js",["67"],"import React, { useState, useRef, useCallback } from \"react\";\r\nimport useFoodRandom from './useFoodRandom'\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction HomePage() {\r\n  const [addMore, setAddMore] = useState(1)\r\n  const {\r\n    foods,\r\n    loading,\r\n    error\r\n  } = useFoodRandom(addMore)\r\n\r\n  const observer = useRef()\r\n  \r\n  const lastFoodElementRef = useCallback(node => {\r\n    if (loading) return\r\n    if (observer.current) observer.current.disconnect()\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if(entries[0].isIntersecting) {\r\n        setAddMore(prevAddMore => prevAddMore + 1)\r\n      }\r\n    })\r\n    if (node) observer.current.observe(node)\r\n  }, [loading])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n          <div className=\"row\">\r\n          {foods.map((food, index) => {\r\n            if (foods.length === index + 1){\r\n              return <div className=\"col-lg-4 col-md-6\" key={food.id}><Link to={{pathname: `/food/${food.id}`}}>\r\n                <img alt='food' ref={lastFoodElementRef}  id={food.id} src={food.image} />\r\n                </Link></div>\r\n            }\r\n            return <div className=\"col-lg-4 col-md-6\" key={food.id}><Link to={{pathname: `/food/${food.id}`}}>\r\n              <img alt='food' key={food.id} id={food.id} src={food.image} />\r\n              </Link></div>\r\n            })\r\n          }\r\n          </div>\r\n      </div>\r\n      <div>{loading && 'Loading...'}</div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomePage","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Favorites.js",["68"],"import React, { useState, useEffect } from 'react'\r\nimport {useCookies} from 'react-cookie';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction FavoritePage() {\r\n    const [token] = useCookies(['mytoken'])\r\n    const token_id = token['mytoken']\r\n    const [user_id] = useCookies(['myuser'])\r\n    const user = user_id['myuser']\r\n    const [favorites, setFavorites] = useState([])\r\n    const headers = {\r\n        'Content-Type':'application/json',\r\n        'Authorization':`Token ${token_id}` \r\n      };\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://127.0.0.1:8000/api/favorites/?user=${user}`, { headers })\r\n        .then(res=>{\r\n            res.data.map(food => \r\n                (axios.get(`https://api.spoonacular.com/recipes/${food.food_id}/information?apiKey=${process.env.REACT_APP_API_KEY}`)\r\n                .then(resp =>{\r\n                    setFavorites(oldfavorites => [...oldfavorites, resp.data])\r\n                })\r\n            ))\r\n            })\r\n            /*\r\n            axios({\r\n                method: 'GET',\r\n                url: `https://api.spoonacular.com/recipes/${id}/information?apiKey=b19b9ab34ae04c10aeefb0f9ef7e0f3b`,    \r\n            }).then(res => {\r\n                const recipeImage = res.data.image;\r\n                const recipeTitle = res.data.title;\r\n                setImage(recipeImage);\r\n                setTitle(recipeTitle);\r\n                console.log(recipeImage)\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response)\r\n            });\r\n            */\r\n        .catch(e =>{\r\n            console.log(e)\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n        {favorites.map((food) => {\r\n        return <div className=\"col-lg-6\" key={food.id}><Link to={{pathname: `/food/${food.id}`}}>\r\n          <img className=\"img-fluid\" alt='food' key={food.id} id={food.id} src={food.image} />\r\n          </Link></div>\r\n        })\r\n      }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoritePage\r\n","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Navbar.js",["69"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport {useCookies} from 'react-cookie';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar() {\r\n    const [isLogin, setLogin] = useState(true)\r\n    const [token, setToken, removeToken] = useCookies(['mytoken'])\r\n    let history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if(token['mytoken']) {\r\n            setLogin(true)\r\n        } else {\r\n            setLogin(false)\r\n        } \r\n    }, [token])\r\n\r\n    const logoutBtn = () => {\r\n        removeToken(['mytoken'])\r\n        history.push('/')\r\n    }\r\n    \r\n\r\n    return (\r\n        <nav className='navbar navbar-expand-lg navbar-light bg-light'>\r\n            <div className='container-fluid'>\r\n                <Link className='navbar-brand' to='/'>Nutrition</Link>\r\n                <button \r\n                    className='navbar-toggler' \r\n                    type='button' \r\n                    data-bs-toggle='collapse' \r\n                    data-bs-target='#navbarNav' \r\n                    aria-controls='navbarNav' \r\n                    aria-expanded='false' \r\n                    aria-label='Toggle navigation'\r\n                >\r\n                    <span className='navbar-toggler-icon'></span>\r\n                </button>\r\n                <div className='collapse navbar-collapse' id='navbarNav'>\r\n                    <ul className='navbar-nav'>\r\n                        <li className='nav-item'>\r\n                            <NavLink className='nav-link' to='/'>Home</NavLink>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <NavLink className='nav-link' to='/search'>Search</NavLink>\r\n                        </li>\r\n                        {isLogin ?\r\n                        <> \r\n                            <li>\r\n                            <NavLink className='nav-link' to='/favorites'>Favorite</NavLink>\r\n                            </li>\r\n                            <li>\r\n                            <button onClick = {logoutBtn} className = \"btn btn-primary\">Logout</button>\r\n                            </li>\r\n                        </>    \r\n                            :<li className='nav-item'>\r\n                            <NavLink className='nav-link' to='/login'>Login</NavLink>\r\n                        </li>}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\n","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Page.js",["70"],"import React, { useState, useEffect } from 'react';\r\nimport Posts from './Posts';\r\nimport Pagination from './Pagination';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Page = (props) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { pageNum } = useParams();\r\n  const [currentPage, setCurrentPage] = useState(pageNum);\r\n  const [postsPerPage] = useState(9);\r\n\r\n  const { query, minCarbs, maxCarbs, minCalories, maxCalories, minCholesterol, maxCholesterol} = useParams();\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n\r\n      const res = await axios.get('https://api.spoonacular.com/recipes/complexSearch', {\r\n        params: {\r\n          apiKey: process.env.REACT_APP_API_KEY,\r\n          query: query,\r\n          minCarbs :minCarbs,\r\n          maxCarbs:maxCarbs,\r\n          minCalories:minCalories,\r\n          maxCalories:maxCalories,\r\n          minCholesterol: minCholesterol,\r\n          maxCholesterol: maxCholesterol,\r\n          number:27\r\n        }\r\n      });\r\n      setPosts(res.data.results);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchPosts();\r\n  }, [query]);\r\n\r\n  // Get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  // Change\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className='container mt-5'>\r\n      <h1 className='text-primary mb-3'>Search Result</h1>\r\n      <Posts posts={currentPosts} loading={loading} />\r\n      <Pagination\r\n        postsPerPage={postsPerPage}\r\n        totalPosts={posts.length}\r\n        paginate={paginate}\r\n        query={query}\r\n\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\useFoodRandom.js",[],"D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\FavoriteButton.js",["71","72"],"import React, { useState, useEffect } from 'react'\r\nimport APIService from '../APIService';\r\nimport {useCookies} from 'react-cookie';\r\nimport axios from 'axios';\r\n\r\nfunction FavoriteButton(props) {\r\n\r\n    const [token] = useCookies(['mytoken'])\r\n    const [user_id] = useCookies(['myuser'])\r\n    const food_id = props.id\r\n    const user = user_id['myuser']\r\n    const [isLike, setIsLike] = useState(false)\r\n    const [id, setId] = useState(0)\r\n\r\n    const likeFood = () => {\r\n        APIService.InsertFood({food_id, user}, token['mytoken'])\r\n        .then(resp => {\r\n          setId(resp.data.id)\r\n        })\r\n        setIsLike(true)\r\n    }\r\n\r\n    const removeFood = () => {\r\n      APIService.DeleteFavorite(id, token['mytoken'])\r\n      setIsLike(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n      APIService.isLike(food_id, user_id['myuser'], token['mytoken'])\r\n      .then(resp => {\r\n        if (resp.data.length !== 0) {\r\n          setIsLike(true)\r\n          setId(resp.data[0].id)\r\n        }\r\n      })\r\n    }, [])\r\n   /*\r\n    function likeFood() {\r\n\r\n        return axios.post('http://127.0.0.1:8000/api/articles/', body, {\r\n          headers: {\r\n            'Content-Type':'application/json',\r\n            'Authorization':`Token ${token}` \r\n          }\r\n        });\r\n      }\r\n    */\r\n\r\n    return (\r\n        <div>\r\n            <div className = \"col\">\r\n            {\r\n                    isLike === true ? <button onClick= {removeFood} className = \"btn btn-success\">Remove From Favorite</button>\r\n                    :  <button onClick = {likeFood} className = \"btn btn-primary\">Add to Favorite</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoriteButton\r\n","D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\APIService.js",[],"D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Posts.js",[],"D:\\cs50\\Web\\Nutrition\\nutrition_web\\ReactFrontEnd-master\\my-app\\src\\components\\Pagination.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":75,"column":13,"nodeType":"79","endLine":75,"endColumn":53},{"ruleId":"80","severity":1,"message":"81","line":12,"column":12,"nodeType":"82","messageId":"83","endLine":12,"endColumn":16},{"ruleId":"84","severity":1,"message":"85","line":21,"column":8,"nodeType":"86","endLine":21,"endColumn":15,"suggestions":"87"},{"ruleId":"80","severity":1,"message":"88","line":12,"column":5,"nodeType":"82","messageId":"83","endLine":12,"endColumn":10},{"ruleId":"84","severity":1,"message":"89","line":45,"column":7,"nodeType":"86","endLine":45,"endColumn":9,"suggestions":"90"},{"ruleId":"80","severity":1,"message":"91","line":9,"column":19,"nodeType":"82","messageId":"83","endLine":9,"endColumn":27},{"ruleId":"84","severity":1,"message":"92","line":40,"column":6,"nodeType":"86","endLine":40,"endColumn":13,"suggestions":"93"},{"ruleId":"80","severity":1,"message":"94","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":13},{"ruleId":"84","severity":1,"message":"95","line":36,"column":8,"nodeType":"86","endLine":36,"endColumn":10,"suggestions":"96"},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["99"],"'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'headers' and 'user'. Either include them or remove the dependency array.",["100"],"'setToken' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'maxCalories', 'maxCarbs', 'maxCholesterol', 'minCalories', 'minCarbs', and 'minCholesterol'. Either include them or remove the dependency array.",["101"],"'axios' is defined but never used.","React Hook useEffect has missing dependencies: 'food_id', 'token', and 'user_id'. Either include them or remove the dependency array.",["102"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [history, token]",{"range":"111","text":"112"},"Update the dependencies array to be: [headers, user]",{"range":"113","text":"114"},"Update the dependencies array to be: [maxCalories, maxCarbs, maxCholesterol, minCalories, minCarbs, minCholesterol, query]",{"range":"115","text":"116"},"Update the dependencies array to be: [food_id, token, user_id]",{"range":"117","text":"118"},[600,607],"[history, token]",[1643,1645],"[headers, user]",[1203,1210],"[maxCalories, maxCarbs, maxCholesterol, minCalories, minCarbs, minCholesterol, query]",[1009,1011],"[food_id, token, user_id]"]